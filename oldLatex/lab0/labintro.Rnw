\documentclass{article}

\input{../labStyle}

\begin{document}

\license{This is a product of OpenIntro that is released under a Creative Commons Attribution-ShareAlike 3.0 Unported (\web{http://creativecommons.org/licenses/by-sa/3.0}). This lab was adapted for OpenIntro by Andrew Bray and Mine \c{C}etinkaya-Rundel from a lab written by Mark Hansen of UCLA Statistics.}

\section*{Introduction to R and RStudio}

The goal of this lab is to introduce you to R and RStudio, which you'll be using throughout the course both to learn the statistical concepts discussed in the texbook and also to analyze real data and come to informed conclusions.  To straighten out which is which: R is the name of the programming language itself and RStudio is a convenient interface.

As the labs progress, you are encouraged to explore beyond what the labs dictate; a willingness to experiment will make you a much better programmer.  Before we get to that stage, however, you need to build some basic fluency in R.  Today we begin with the fundamental building blocks of R and RStudio: the interface, reading in data, and basic commands.

\begin{figure}[h]
\centering
\includegraphics[width=4.5 in]{more/rInterface2014.png}
\end{figure}

The panel in the upper right contains your \emph{workspace} as well as a history of the commands that you've previously entered.  Any plots that you generate will show up in the panel in the lower right corner.

The panel on the left is where the action happens.  It's called the \emph{console}.  Everytime you launch RStudio, it will have the same text at the top of the console telling you the version of R that you're running.  Below that information is the \emph{prompt}.  As its name suggests, this prompt is really a request, a request for a command.  Initially, interacting with R is all about typing commands and interpreting the output. These commands and their syntax have evolved over decades (literally) and now provide what many users feel is a fairly natural way to access data and organize, describe, and invoke statistical computations.

To get you started, enter the following command at the R prompt (i.e. right after $>$ on the console).  You can either type it in manually or copy and paste it from this document.

<<load-abrbuthnot-data, eval=FALSE>>=
source("http://www.openintro.org/stat/data/arbuthnot.R")
@


\subsection*{The Data: Dr. Arbuthnot's Baptism Records}

The Arbuthnot data set refers to Dr. John Arbuthnot, an 18$^{\textrm{th}}$ century physician, writer, and mathematician.  He was interested in the ratio of newborn boys to newborn girls, so he gathered the baptism records for children born in London for every year from 1629 to 1710.  We can take a look at the data by typing its name into the console.

<<view-data, eval=FALSE>>=
arbuthnot
@

What you should see are four columns of numbers, each row representing a different year: the first entry in each row is simply the row number (an index we can use to access the data from individual years if we want), the second is the year, and the third and fourth are the numbers of boys and girls baptized that year, respectively. Use the scrollbar on the right side of the console window to examine the complete data set.

Note that the row numbers in the first column are not part of Arbuthnot's data. R adds them as part of its printout to help you make visual comparisons. You can think of them as the index that you see on the left side of a spreadsheet. In fact, the comparison to a spreadsheet will generally be helpful. R has stored Arbuthnot's data in a kind of spreadsheet or table called a \emph{data frame}.

You can see the dimensions of this data frame by typing:

<<dim-data, eval=FALSE>>=
dim(arbuthnot)
@


<<names-data, eval=FALSE>>=
names(arbuthnot)
@



\subsection*{Some Exploration}
Let's start to examine the data a little more closely. We can access the data in a single column of a data frame separately using a command like

<<view-boys, eval=FALSE>>=
arbuthnot$boys
@

This command will only show the number of boys baptized each year.

\begin{exercise}
What command would you use to extract just the counts of girls baptized? Try it!
\end{exercise}


\paragraph{mosaic}

There is an additional package for R called \textbf{mosaic} that streamlines all of the commands that you will need in this course. This package is specifically designed by a team of NSF-funded educators to make R more accessible to introductory statistics students like you. The \textbf{mosaic} package doesn't provide new functionality so much as it makes existing functionality more logical, consistent, all the while emphasizing importants concepts in statistics. 

To use the package, you will first need to install it.

<<install-mosaic, eval=FALSE>>=
install.packages("mosaic")
@

Note that you will only have to do this \emph{once}. However, once the package is installed, you will have to load it into the current workspace before it can be used. 

<<require-mosaic, message=FALSE>>=
require(mosaic)
@

Note that you will have to do this \emph{every} time you start a new R session. 

R has some powerful functions for making graphics. 

The centerpiece of the \textbf{mosaic} syntax is the use of the \emph{modeling language}. This involves the use of a tilde (~), which can be read as ``is a function of". For example, to plot the number of girls as a function of the year:

<<plot-girls-vs-year, eval=FALSE>>=
# plot(x = arbuthnot$year, y = arbuthnot$girls) # basic R plot command
xyplot(girls ~ year, data=arbuthnot) # mosaic-style syntax
@


<<plot-girls-vs-year-line, eval=FALSE>>=
xyplot(girls ~ year, data=arbuthnot, type="l")
@

You might wonder how you are supposed to know that it was possible to add that third argument.  Thankfully, R documents all of its functions extensively. To read what a function does and learn the arguments that are available to you, just type in a question mark followed by the name of the function that you're interested in. Try the following.

<<plot-help, eval=FALSE, tidy = FALSE>>=
?xyplot
@

Notice that the help file replaces the plot  in the lower right panel. You can toggle between plots and help files using the tabs at the top of that panel.

\begin{exercise}
\end{exercise}

Now, suppose we want to plot the total number of baptisms.  To compute this, we could use the fact that R is really just a big calculator. We can type in mathematical expressions like

<<calc-total-bapt-numbers, eval=FALSE>>=
5218 + 4683
@

to see the total number of baptisms in 1629. We could repeat this once for each year, but there is a faster way. If we add the vector for baptisms for boys and girls, R will compute all sums simultaneously.

<<calc-total-bapt-vars, eval=FALSE>>=
arbuthnot$boys + arbuthnot$girls
@

You can also use *with()* to avoid repeatedly typing the name of the data frame. *with()* instructs R to interpret everything else from within the data frame that you specify. 

<<calc-total-bapt-vars-mosaic, eval=FALSE>>=
with(arbuthnot, boys + girls)
@

What you will see are 82 numbers (in that packed display, because we aren't looking at a data frame here), each one representing the sum we're after. Take a look at a few of them and verify that they are right. Therefore, we can make a plot of the total number of baptisms per year with the command

<<plot-total-vs-year, eval=FALSE>>=
xyplot((boys + girls) ~ year, data=arbuthnot, type="l")
@


Similarly to how we computed the proportion of boys, we can compute the ratio of the number of boys to the number of girls baptized in 1629 with

<<calc-prop-boys-to-girls-numbers, eval=FALSE>>=
5218 / 4683
@

or we can act on the complete vectors with the expression

<<calc-prop-boys-to-girls-vars, eval=FALSE>>=
# arbuthnot$boys / arbuthnot$girls
with(arbuthnot, boys / girls)
@

The proportion of newborns that are boys

<<calc-prop-boys-numbers, eval=FALSE>>=
5218 / (5218 + 4683)
@

or this may also be computed for all years simultaneously:

<<calc-prop-boys-vars, eval=FALSE>>=
# arbuthnot$boys / (arbuthnot$boys + arbuthnot$girls)
with(arbuthnot, boys / (boys + girls))
@

Note that with R as with your calculator, you need to be conscious of the order of operations.  Here, we want to divide the number of boys by the total number of newborns, so we have to use parentheses.  Without them, R will first do the division, then the addition, giving you something that is not a proportion.

\begin{exercise}
Now, make a plot of the proportion of boys over time. What do you see? Tip: If you use the up and down arrow keys, you can scroll through your previous commands, your so-called command history. You can also access it by clicking on the history tab in the upper right panel.  This will save you a lot of typing in the future.
\end{exercise}

Finally, in addition to simple mathematical operators like subtraction and division, you can ask R to make comparisons like greater than, $>$, less than, $<$, and equality, $==$. For example, we can ask if boys outnumber girls in each year with the expression

<<boys-more-than-girls, eval=FALSE>>=
# arbuthnot$boys > arbuthnot$girls
with(arbuthnot, boys > girls)
@



\vspace{2cm}

\subsection*{On Your Own}

In the previous few pages, you recreated some of the displays and preliminary analysis of Arbuthnot's baptism data. Your assignment involves repeating these steps, but for present day birth records in the United States.  Load up the present day data with the following command.

<<load-present-data, eval=FALSE>>=
source("http://www.openintro.org/stat/data/present.R")
@

\begin{enumerate}
\item What years are included in this data set? What are the dimensions of the data frame and what are the variable or column names?
\item How do the counts of boys and girls in the present day birth records compare to Arbuthnot's? Are they on a similar scale?
\item Does Arbuthnot's observation about boys being born in greater proportion than girls hold up in the U.S.?
\item Make a plot that displays the boy-to-girl ratio for every year in the data set. What do you see?
\item In what year did we see the most total number of births in the U.S.? You can refer to the help files or the R reference card (\web{http://cran.r-project.org/doc/contrib/Short-refcard.pdf}) to find helpful commands. \\
\end{enumerate}

These data come from a report by the Centers for Disease Control (\web{http://www.cdc.gov/nchs/data/nvsr/nvsr53/nvsr53_20.pdf}). Check it out if you would like to read more about an analysis of sex ratios at birth in the United States. \\

That was a short introduction to R and RStudio, but we will provide you with more functions and a more complete sense of the language as the course progresses. Feel free to browse around the websites for R \web{http://www.r-project.org} and RStudio \web{http://rstudio.org} if you're interested in learning more, or find more labs for practice at \web{http://openintro.org}.

\end{document}